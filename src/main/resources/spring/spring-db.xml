<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context   https://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

  <jdbc:initialize-database>
    <jdbc:script location="${jdbc.initLocation}"/>
    <jdbc:script encoding="UTF-8" location="classpath:db/populateDB.sql"/>
  </jdbc:initialize-database>

  <beans profile="hsqldb">
    <context:property-placeholder location="classpath:db/hsqldb.properties"
      system-properties-mode="OVERRIDE"/>
    <bean id="dataSource"
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="org.postgresql.Driver"/>
      <property name="url" value="${database.url}"/>
      <property name="username" value="${database.username}"/>
      <property name="password" value="${database.password}"/>
    </bean>
  </beans>

  <beans profile="postgres">
    <context:property-placeholder location="classpath:db/postgres.properties"
      system-properties-mode="OVERRIDE"/>
    <bean id="dataSource"
      class="org.apache.tomcat.jdbc.pool.DataSource">
      <property name="driverClassName" value="org.postgresql.Driver"/>
      <property name="url" value="${database.url}"/>
      <property name="username" value="${database.username}"/>
      <property name="password" value="${database.password}"/>
    </bean>
    <bean class="org.springframework.beans.factory.config.MethodInvokingBean">
      <property name="staticMethod" value="org.slf4j.bridge.SLF4JBridgeHandler.install"/>
    </bean>
  </beans>

  <beans profile="jdbc">
    <context:component-scan base-package="edu.cepuii.**.repository.jdbc"/>
    <bean id="jdbcTemplate"
      class="org.springframework.jdbc.core.JdbcTemplate">
      <constructor-arg ref="dataSource"/>
    </bean>
    <bean id="namedJdbcTemplate"
      class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
      <constructor-arg ref="jdbcTemplate"/>
    </bean>
  </beans>

  <beans profile="dataJpa, jpa">
    <bean id="entityManagerFactory"
      class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
      p:dataSource-ref="dataSource"
      p:packagesToScan="edu.cepuii.**.model">
      <property name="jpaPropertyMap">
        <map>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}"
            value="${hibernate.format_sql}"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}"
            value="${hibernate.use_sql_comments}"/>
          <!--https://github.com/hibernate/hibernate-orm/blob/master/documentation/src/main/asciidoc/userguide/chapters/caching/Caching.adoc#caching-provider-jcache-->
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}"
            value="org.hibernate.cache.jcache.internal.JCacheRegionFactory"/>
          <entry key="#{T(org.hibernate.cache.jcache.ConfigSettings).PROVIDER}"
            value="org.ehcache.jsr107.EhcacheCachingProvider"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}"
            value="true"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}"
            value="false"/> <!--default-->
        </map>
      </property>
      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
          p:showSql="${jpa.showSql}"/>
      </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
      p:entityManagerFactory-ref="entityManagerFactory"/>
    <bean class="edu.cepuii.caloriesmanagment.repository.JpaUtil"/>
    <tx:annotation-driven/>
  </beans>

  <beans profile="jpa">
    <context:component-scan base-package="edu.cepuii.**.repository.jpa"/>
  </beans>

  <beans profile="dataJpa">
    <context:component-scan base-package="edu.cepuii.**.repository.dataJpa"/>
    <jpa:repositories base-package="edu.cepuii.**.repository.dataJpa"/>
  </beans>

  <beans profile="tomcat">
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/topjava"/>
    <context:property-placeholder location="classpath:db/tomcat.properties"
      system-properties-mode="OVERRIDE"/>
  </beans>
</beans>